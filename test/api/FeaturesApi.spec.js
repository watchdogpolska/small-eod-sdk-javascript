/**
 * Small_EOD
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: adam.dobrawy@siecobywatelska.pl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SmallEodClient);
  }
}(this, function(expect, SmallEodClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SmallEodClient.FeaturesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FeaturesApi', function() {
    describe('featuresCreate', function() {
      it('should call featuresCreate successfully', function(done) {
        //uncomment below and update the code to test featuresCreate
        //instance.featuresCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featuresDelete', function() {
      it('should call featuresDelete successfully', function(done) {
        //uncomment below and update the code to test featuresDelete
        //instance.featuresDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featuresFeatureoptionCreate', function() {
      it('should call featuresFeatureoptionCreate successfully', function(done) {
        //uncomment below and update the code to test featuresFeatureoptionCreate
        //instance.featuresFeatureoptionCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featuresFeatureoptionDelete', function() {
      it('should call featuresFeatureoptionDelete successfully', function(done) {
        //uncomment below and update the code to test featuresFeatureoptionDelete
        //instance.featuresFeatureoptionDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featuresFeatureoptionList', function() {
      it('should call featuresFeatureoptionList successfully', function(done) {
        //uncomment below and update the code to test featuresFeatureoptionList
        //instance.featuresFeatureoptionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featuresFeatureoptionPartialUpdate', function() {
      it('should call featuresFeatureoptionPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test featuresFeatureoptionPartialUpdate
        //instance.featuresFeatureoptionPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featuresFeatureoptionRead', function() {
      it('should call featuresFeatureoptionRead successfully', function(done) {
        //uncomment below and update the code to test featuresFeatureoptionRead
        //instance.featuresFeatureoptionRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featuresFeatureoptionUpdate', function() {
      it('should call featuresFeatureoptionUpdate successfully', function(done) {
        //uncomment below and update the code to test featuresFeatureoptionUpdate
        //instance.featuresFeatureoptionUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featuresList', function() {
      it('should call featuresList successfully', function(done) {
        //uncomment below and update the code to test featuresList
        //instance.featuresList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featuresPartialUpdate', function() {
      it('should call featuresPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test featuresPartialUpdate
        //instance.featuresPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featuresRead', function() {
      it('should call featuresRead successfully', function(done) {
        //uncomment below and update the code to test featuresRead
        //instance.featuresRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featuresUpdate', function() {
      it('should call featuresUpdate successfully', function(done) {
        //uncomment below and update the code to test featuresUpdate
        //instance.featuresUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
