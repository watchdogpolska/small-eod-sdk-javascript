/**
 * Small_EOD
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: adam.dobrawy@siecobywatelska.pl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SmallEodClient);
  }
}(this, function(expect, SmallEodClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SmallEodClient.CollectionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CollectionsApi', function() {
    describe('collectionsCasesEventsList', function() {
      it('should call collectionsCasesEventsList successfully', function(done) {
        //uncomment below and update the code to test collectionsCasesEventsList
        //instance.collectionsCasesEventsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsCasesEventsRead', function() {
      it('should call collectionsCasesEventsRead successfully', function(done) {
        //uncomment below and update the code to test collectionsCasesEventsRead
        //instance.collectionsCasesEventsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsCasesLettersList', function() {
      it('should call collectionsCasesLettersList successfully', function(done) {
        //uncomment below and update the code to test collectionsCasesLettersList
        //instance.collectionsCasesLettersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsCasesLettersRead', function() {
      it('should call collectionsCasesLettersRead successfully', function(done) {
        //uncomment below and update the code to test collectionsCasesLettersRead
        //instance.collectionsCasesLettersRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsCasesList', function() {
      it('should call collectionsCasesList successfully', function(done) {
        //uncomment below and update the code to test collectionsCasesList
        //instance.collectionsCasesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsCasesNotesList', function() {
      it('should call collectionsCasesNotesList successfully', function(done) {
        //uncomment below and update the code to test collectionsCasesNotesList
        //instance.collectionsCasesNotesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsCasesNotesRead', function() {
      it('should call collectionsCasesNotesRead successfully', function(done) {
        //uncomment below and update the code to test collectionsCasesNotesRead
        //instance.collectionsCasesNotesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsCasesRead', function() {
      it('should call collectionsCasesRead successfully', function(done) {
        //uncomment below and update the code to test collectionsCasesRead
        //instance.collectionsCasesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsCreate', function() {
      it('should call collectionsCreate successfully', function(done) {
        //uncomment below and update the code to test collectionsCreate
        //instance.collectionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsDelete', function() {
      it('should call collectionsDelete successfully', function(done) {
        //uncomment below and update the code to test collectionsDelete
        //instance.collectionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsList', function() {
      it('should call collectionsList successfully', function(done) {
        //uncomment below and update the code to test collectionsList
        //instance.collectionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsPartialUpdate', function() {
      it('should call collectionsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test collectionsPartialUpdate
        //instance.collectionsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsRead', function() {
      it('should call collectionsRead successfully', function(done) {
        //uncomment below and update the code to test collectionsRead
        //instance.collectionsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsTokensCreate', function() {
      it('should call collectionsTokensCreate successfully', function(done) {
        //uncomment below and update the code to test collectionsTokensCreate
        //instance.collectionsTokensCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionsUpdate', function() {
      it('should call collectionsUpdate successfully', function(done) {
        //uncomment below and update the code to test collectionsUpdate
        //instance.collectionsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
