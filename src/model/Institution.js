/**
 * Small_EOD
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: adam.dobrawy@siecobywatelska.pl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Institution model module.
 * @module model/Institution
 * @version 1.0.4
 */
class Institution {
    /**
     * Constructs a new <code>Institution</code>.
     * @alias module:model/Institution
     * @param name {String} Name of institution
     * @param administrativeUnit {String} 
     */
    constructor(name, administrativeUnit) { 
        
        Institution.initialize(this, name, administrativeUnit);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, administrativeUnit) { 
        obj['name'] = name;
        obj['administrativeUnit'] = administrativeUnit;
    }

    /**
     * Constructs a <code>Institution</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Institution} obj Optional instance to populate.
     * @return {module:model/Institution} The populated <code>Institution</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Institution();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('administrativeUnit')) {
                obj['administrativeUnit'] = ApiClient.convertToType(data['administrativeUnit'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('modifiedBy')) {
                obj['modifiedBy'] = ApiClient.convertToType(data['modifiedBy'], 'Number');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'Number');
            }
            if (data.hasOwnProperty('modifiedOn')) {
                obj['modifiedOn'] = ApiClient.convertToType(data['modifiedOn'], 'Date');
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'Date');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('epuap')) {
                obj['epuap'] = ApiClient.convertToType(data['epuap'], 'String');
            }
            if (data.hasOwnProperty('street')) {
                obj['street'] = ApiClient.convertToType(data['street'], 'String');
            }
            if (data.hasOwnProperty('houseNo')) {
                obj['houseNo'] = ApiClient.convertToType(data['houseNo'], 'String');
            }
            if (data.hasOwnProperty('postalCode')) {
                obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
            }
            if (data.hasOwnProperty('flatNo')) {
                obj['flatNo'] = ApiClient.convertToType(data['flatNo'], 'String');
            }
            if (data.hasOwnProperty('nip')) {
                obj['nip'] = ApiClient.convertToType(data['nip'], 'String');
            }
            if (data.hasOwnProperty('regon')) {
                obj['regon'] = ApiClient.convertToType(data['regon'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * Name of institution
 * @member {String} name
 */
Institution.prototype['name'] = undefined;

/**
 * @member {String} administrativeUnit
 */
Institution.prototype['administrativeUnit'] = undefined;

/**
 * @member {Number} id
 */
Institution.prototype['id'] = undefined;

/**
 * @member {Number} modifiedBy
 */
Institution.prototype['modifiedBy'] = undefined;

/**
 * @member {Number} createdBy
 */
Institution.prototype['createdBy'] = undefined;

/**
 * @member {Date} modifiedOn
 */
Institution.prototype['modifiedOn'] = undefined;

/**
 * @member {Date} createdOn
 */
Institution.prototype['createdOn'] = undefined;

/**
 * E-mail address.
 * @member {String} email
 */
Institution.prototype['email'] = undefined;

/**
 * Name of city.
 * @member {String} city
 */
Institution.prototype['city'] = undefined;

/**
 * ePUAP address.
 * @member {String} epuap
 */
Institution.prototype['epuap'] = undefined;

/**
 * Name of street.
 * @member {String} street
 */
Institution.prototype['street'] = undefined;

/**
 * House number.
 * @member {String} houseNo
 */
Institution.prototype['houseNo'] = undefined;

/**
 * Postal code.
 * @member {String} postalCode
 */
Institution.prototype['postalCode'] = undefined;

/**
 * Flat number.
 * @member {String} flatNo
 */
Institution.prototype['flatNo'] = undefined;

/**
 * Tax Identification Number.
 * @member {String} nip
 */
Institution.prototype['nip'] = undefined;

/**
 * Statistical Identification Number.
 * @member {String} regon
 */
Institution.prototype['regon'] = undefined;

/**
 * Comment for this case.
 * @member {String} comment
 */
Institution.prototype['comment'] = undefined;

/**
 * @member {Array.<String>} tags
 */
Institution.prototype['tags'] = undefined;






export default Institution;

